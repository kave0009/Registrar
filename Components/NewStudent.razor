@page "/new-student"
@using Registrar.Models
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="container mt-5 shadow-lg p-4 bg-white rounded">
    <h3>Add Student</h3>
    <EditForm Model="@student" OnValidSubmit="@HandleValidSubmit" class="mt-3" FormName="newStudentForm">
        <DataAnnotationsValidator />
        <ValidationSummary class="alert alert-danger" />
        <div class="form-group mb-3">
            <label for="firstName">First Name</label>
            <InputText id="firstName" class="form-control" @bind-Value="student.FirstName" />
            <ValidationMessage For="@(() => student.FirstName)" class="invalid-feedback d-block" />
        </div>
        <div class="form-group mb-3">
            <label for="lastName">Last Name</label>
            <InputText id="lastName" class="form-control" @bind-Value="student.LastName" />
            <ValidationMessage For="@(() => student.LastName)" class="invalid-feedback d-block" />
        </div>
        <div class="form-group mb-3">
            <label for="studentType">Student Type</label>
            <InputSelect id="studentType" class="form-control" @bind-Value="student.Type">
                <option value="">Select a Student Type</option>
                <option value="FullTime">FullTime</option>
                <option value="PartTime">PartTime</option>
                <option value="Coop">Coop</option>
            </InputSelect>
            <ValidationMessage For="@(() => student.Type)" class="invalid-feedback d-block" />
        </div>
        <div class="form-group d-flex justify-content-start">
            <button type="submit" class="btn btn-primary shadow-sm me-2">Add Student</button>
            <NavLink class="btn btn-secondary shadow-sm ml-2" href="/">Cancel</NavLink>
        </div>
    </EditForm>
</div>

@code {
    private Student student = new Student();

    private async Task HandleValidSubmit()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/students", student);
            response.EnsureSuccessStatusCode();
            Navigation.NavigateTo("/");
        }
        catch (HttpRequestException httpRequestException)
        {
            Console.WriteLine($"Error: {httpRequestException.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}
